---
## Install

# Deploy Camel K using an operator
- name: Create a Subscription of the kamel operator
  k8s:
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ kamel_subsription_name }}"
        namespace: "{{ all_namespaces_project_name }}"
      spec:
        channel: "{{ kamel_subsription_channel }}"
        installPlanApproval: "{{ kamel_subsription_install_plan_approval }}"
        name: "{{ kamel_subsription_name }}"
        source: "{{ kamel_subsription_source }}"
        sourceNamespace: "{{ kamel_subsription_source_namespace }}"

# Checking status of the operator
- name: wait for kamel csv to be ready
  shell: "oc get csv -o json -n {{ all_namespaces_project_name }} | jq -r '.items[] | select(.metadata.name | contains(\"{{ kamel_subsription_csv_root }}\")) | .status.phase'"
  register: result
  until: result.stdout.find("Succeeded") != -1
  retries: 30
  delay: 30

# Create Camel K Demo related namespaces
- name: Create camel-k demo namespace
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ project_name }}"
        annotations:
          openshift.io/description: "{{ project_desc }}"
          openshift.io/display-name: "{{ project_display_name }}"

# Create Camel K Demo Integration Platform
- name: Create camel-k demo integration platform
  k8s:
    state: present
    definition:
      apiVersion: camel.apache.org/v1alpha1
      kind: IntegrationPlatform
      metadata:
        labels:
          app: camel-k
        name: camel-k
        namespace: "{{ project_name }}"

# Create Camel K Demo Simple JS Integration
- name: Create camel-k demo simple JS integration
  k8s:
    state: present
    definition:
      apiVersion: camel.apache.org/v1alpha1
      kind: Integration
      metadata:
        name: simple
        namespace: "{{ project_name }}"
      spec:
        sources:
          - content: |-
              from('timer:js?period=10s')
                  .routeId('js')
                  .setBody()
                      .simple('Hello Camel k from ${routeId}')
                  .to('log:info?multiline=true')
            name: simple.js


          


            